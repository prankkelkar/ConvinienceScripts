diff --git a/src/core/thread.cc b/src/core/thread.cc
index f13dfce..2a2471e 100644
--- a/src/core/thread.cc
+++ b/src/core/thread.cc
@@ -276,7 +276,7 @@ thread_context::main() {
 #elif defined(__aarch64__)
     asm(".cfi_undefined x30");
 #else
-    #warning "Backtracing from seastar threads may be broken"
+    asm(".cfi_undefined r14");
 #endif
     _context.initial_switch_in_completed();
     if (group() != current_scheduling_group()) {
diff --git a/src/http/httpd.cc b/src/http/httpd.cc
index fde1785..ccc5d4b 100644
--- a/src/http/httpd.cc
+++ b/src/http/httpd.cc
@@ -224,10 +224,10 @@ future<> connection::read_one() {
         if (_server._credentials) {
             req->protocol_name = "https";
         }
-
+       char * pEND=nullptr;
         size_t content_length_limit = _server.get_content_length_limit();
         sstring length_header = req->get_header("Content-Length");
-        req->content_length = strtol(length_header.c_str(), nullptr, 10);
+        req->content_length = strtol(length_header.c_str(), &pEND, 10);

         if (req->content_length > content_length_limit) {
             generate_error_reply_and_close(std::move(req), reply::status_type::payload_too_large,
diff --git a/src/net/dns.cc b/src/net/dns.cc
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8723574..545332a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -22,6 +22,8 @@

 cmake_minimum_required (VERSION 3.5)

+set(CMAKE_CXX_STANDARD 17)
+
 list (APPEND CMAKE_MODULE_PATH
   ${CMAKE_CURRENT_SOURCE_DIR}/cmake
   ${CMAKE_CURRENT_BINARY_DIR})
diff --git a/src/core/thread.cc b/src/core/thread.cc
index f13dfce..2a2471e 100644
--- a/src/core/thread.cc
+++ b/src/core/thread.cc
@@ -276,7 +276,7 @@ thread_context::main() {
 #elif defined(__aarch64__)
     asm(".cfi_undefined x30");
 #else
-    #warning "Backtracing from seastar threads may be broken"
+    asm(".cfi_undefined r14");
 #endif
     _context.initial_switch_in_completed();
     if (group() != current_scheduling_group()) {
diff --git a/src/http/httpd.cc b/src/http/httpd.cc
index fde1785..ccc5d4b 100644
--- a/src/http/httpd.cc
+++ b/src/http/httpd.cc
@@ -224,10 +224,10 @@ future<> connection::read_one() {
         if (_server._credentials) {
             req->protocol_name = "https";
         }
-
+       char * pEND=nullptr;
